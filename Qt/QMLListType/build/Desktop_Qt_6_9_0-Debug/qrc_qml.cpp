/****************************************************************************
** Resource object code
**
** Created by: The Resource Compiler for Qt version 6.9.0
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#ifdef _MSC_VER
// disable informational message "function ... selected for automatic inline expansion"
#pragma warning (disable: 4711)
#endif

static const unsigned char qt_resource_data[] = {
  // main.qml
  0x0,0x0,0x0,0xe5,
  0x28,
  0xb5,0x2f,0xfd,0x60,0xd,0x2,0xdd,0x6,0x0,0x82,0xc9,0x1e,0x19,0x60,0xd7,0x3,
  0x83,0x1a,0xca,0x6a,0x98,0xec,0xc5,0xe,0x7b,0x9,0x21,0x94,0xb0,0x9e,0x36,0xac,
  0x60,0x44,0x41,0xc7,0x21,0xc,0x6e,0xeb,0x2a,0x62,0x86,0xa1,0x76,0xdf,0x46,0x10,
  0xb6,0xc,0xa3,0x7d,0x1,0x8e,0xd7,0x46,0x76,0x42,0xe3,0x3d,0x8,0xa5,0x7e,0xaf,
  0xc7,0xed,0xaf,0x3d,0x3,0xea,0x5a,0x67,0x56,0x39,0x0,0x0,0xc7,0x96,0x24,0xf2,
  0xb3,0x1f,0xc6,0x7e,0xed,0x2b,0x27,0x8e,0xd4,0x3b,0x6a,0xaa,0xfc,0xd9,0xca,0x3b,
  0x8d,0xb7,0xf3,0x1e,0xc1,0xd1,0x79,0xea,0x57,0x57,0xf7,0x39,0x76,0xc4,0x38,0xe5,
  0x16,0x33,0xb3,0xd3,0xdc,0x65,0x69,0xf5,0x25,0x70,0x5,0xc,0x4,0x86,0xa6,0x57,
  0xc9,0x27,0xfc,0xd7,0x4e,0x92,0x7,0x28,0x20,0x60,0x2,0x91,0x64,0xf5,0x71,0x0,
  0x62,0x29,0xe9,0x9c,0xb7,0xc8,0x5a,0x66,0xf4,0xbd,0x53,0x10,0x2f,0xec,0x10,0xbb,
  0x95,0xc2,0xe1,0x5e,0x20,0xd2,0x13,0xc1,0xbe,0x93,0xb,0xd2,0x2c,0xc1,0x72,0x7,
  0x22,0x1,0x36,0x52,0x90,0x60,0xe5,0xb8,0x5,0x46,0x5,0x14,0xf,0x0,0x8e,0xd8,
  0xbb,0x84,0x99,0x10,0xe0,0xee,0x1d,0x6,0x9,0xbe,0x46,0xfb,0x95,0x15,0x2,0xc,
  0xc8,0x6,0x14,0xdd,0xd1,0xd,0xcc,0x58,0xc4,0x86,0x96,0x22,0x40,0x59,0x78,0x83,
  0x71,0x72,0x60,0x2,
  
};

static const unsigned char qt_resource_name[] = {
  // main.qml
  0x0,0x8,
  0x8,0x1,0x5a,0x5c,
  0x0,0x6d,
  0x0,0x61,0x0,0x69,0x0,0x6e,0x0,0x2e,0x0,0x71,0x0,0x6d,0x0,0x6c,
  
};

static const unsigned char qt_resource_struct[] = {
  // :
  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/main.qml
  0x0,0x0,0x0,0x0,0x0,0x4,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,
0x0,0x0,0x1,0x97,0x78,0x89,0xe2,0x7c,

};

#ifdef QT_NAMESPACE
#  define QT_RCC_PREPEND_NAMESPACE(name) ::QT_NAMESPACE::name
#  define QT_RCC_MANGLE_NAMESPACE0(x) x
#  define QT_RCC_MANGLE_NAMESPACE1(a, b) a##_##b
#  define QT_RCC_MANGLE_NAMESPACE2(a, b) QT_RCC_MANGLE_NAMESPACE1(a,b)
#  define QT_RCC_MANGLE_NAMESPACE(name) QT_RCC_MANGLE_NAMESPACE2( \
        QT_RCC_MANGLE_NAMESPACE0(name), QT_RCC_MANGLE_NAMESPACE0(QT_NAMESPACE))
#else
#   define QT_RCC_PREPEND_NAMESPACE(name) name
#   define QT_RCC_MANGLE_NAMESPACE(name) name
#endif

#if defined(QT_INLINE_NAMESPACE)
inline namespace QT_NAMESPACE {
#elif defined(QT_NAMESPACE)
namespace QT_NAMESPACE {
#endif

bool qRegisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);
bool qUnregisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);

#if defined(__ELF__) || defined(__APPLE__)
static inline unsigned char qResourceFeatureZstd()
{
    extern const unsigned char qt_resourceFeatureZstd;
    return qt_resourceFeatureZstd;
}
#else
unsigned char qResourceFeatureZstd();
#endif

#ifdef QT_NAMESPACE
}
#endif

int QT_RCC_MANGLE_NAMESPACE(qInitResources_qml)();
int QT_RCC_MANGLE_NAMESPACE(qInitResources_qml)()
{
    int version = 3;
    QT_RCC_PREPEND_NAMESPACE(qRegisterResourceData)
        (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1;
}

int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qml)();
int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qml)()
{
    int version = 3;
    version += QT_RCC_PREPEND_NAMESPACE(qResourceFeatureZstd());
    QT_RCC_PREPEND_NAMESPACE(qUnregisterResourceData)
       (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1;
}

#ifdef __clang__
#   pragma clang diagnostic push
#   pragma clang diagnostic ignored "-Wexit-time-destructors"
#endif

namespace {
   struct initializer {
       initializer() { QT_RCC_MANGLE_NAMESPACE(qInitResources_qml)(); }
       ~initializer() { QT_RCC_MANGLE_NAMESPACE(qCleanupResources_qml)(); }
   } dummy;
}

#ifdef __clang__
#   pragma clang diagnostic pop
#endif
